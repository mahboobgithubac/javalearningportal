<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Java Enums Explained</title>
  <style>
    body { font-family: Arial, sans-serif; line-height: 1.6; padding: 20px; background: #f4f4f4; }
    code, pre { background: #eee; padding: 10px; display: block; margin: 10px 0; border-left: 4px solid #666; }
    h2 { color: #2c3e50; }
    .section { margin-bottom: 25px; }
  </style>
</head>
<body>

  <h1>ðŸ§  Java Enums</h1>

  <div class="section">
    <p><strong>Enums</strong> in Java are special types used to define collections of constants.</p>
  </div>

  <div class="section">
    <h2>âœ… Basic Enum Example</h2>
    <pre><code>enum Day {
    MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY
}

public class EnumExample {
    public static void main(String[] args) {
        Day today = Day.MONDAY;
        System.out.println("Today is: " + today);
    }
}</code></pre>
  </div>

  <div class="section">
    <h2>ðŸ”¸ Enum with Switch</h2>
    <pre><code>Day today = Day.FRIDAY;

switch (today) {
    case MONDAY:
        System.out.println("Start of the week!");
        break;
    case FRIDAY:
        System.out.println("Weekend is coming!");
        break;
    default:
        System.out.println("Midweek day");
}</code></pre>
  </div>

  <div class="section">
    <h2>ðŸ”¸ Enum with Fields and Methods</h2>
    <pre><code>enum Level {
    LOW(1), MEDIUM(2), HIGH(3);

    private final int code;

    Level(int code) {
        this.code = code;
    }

    public int getCode() {
        return code;
    }
}

public class EnumDemo {
    public static void main(String[] args) {
        Level l = Level.MEDIUM;
        System.out.println("Level: " + l + ", Code: " + l.getCode());
    }
}</code></pre>
  </div>

  <div class="section">
    <h2>ðŸ”¸ Enum with Abstract Method</h2>
    <pre><code>enum Operation {
    PLUS {
        public int apply(int a, int b) { return a + b; }
    },
    MINUS {
        public int apply(int a, int b) { return a - b; }
    };

    public abstract int apply(int a, int b);
}</code></pre>
  </div>

  <div class="section">
    <h2>âœ… Summary</h2>
    <ul>
      <li>Enums are constants with type safety.</li>
      <li>They can have fields, constructors, and methods.</li>
      <li>Support for switch, comparison, iteration, etc.</li>
    </ul>
  </div>

</body>
</html>
